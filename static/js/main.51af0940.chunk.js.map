{"version":3,"sources":["components/Photo.js","components/FilterBar.js","App.js","serviceWorker.js","index.js"],"names":["Photo","react_default","a","createElement","id","this","props","className","src","url","alt","title","React","Component","FilterBar","show","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterClick","e","preventDefault","console","log","setState","filterbar","state","photos","tag","loading","error","hasMore","per_page","page","handleSearch","bind","assertThisInitialized","window","onscroll","debounce","innerHeight","document","documentElement","scrollTop","offsetHeight","loadPhotos","_this2","method","fetch","concat","process","then","data","json","photosArray","photo","map","imgurl","farm","server","secret","src_components_Photo","key","length","toConsumableArray","_this3","target","value","keyCode","_this4","type","defaultValue","placeholder","onKeyDown","onClick","components_FilterBar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAgBeA,gMARX,OACEC,EAAAC,EAAAC,cAAA,WAASC,GAAIC,KAAKC,MAAMF,GAAIG,UAAU,cACpCN,EAAAC,EAAAC,cAAA,OAAKK,IAAKH,KAAKC,MAAMG,IAAKC,IAAKL,KAAKC,MAAMK,gBAP9BC,IAAMC,YCaXC,mLARX,OAAKT,KAAKC,MAAMS,KAGPd,EAAAC,EAAAC,cAAA,yBAFA,YAPWS,IAAMC,4BCyLfG,cAlLb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAb,KAAAW,IACZC,EAAAC,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAjB,QA2HFkB,kBAAoB,SAAAC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,gBAEZV,EAAKW,SAAS,CACZC,WAAYZ,EAAKa,MAAMD,aAhIzBZ,EAAKa,MAAQ,CACXC,OAAQ,GACRC,IAAK,iBACLH,WAAW,EACXI,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,SAAU,EACVC,KAAM,GAGRpB,EAAKqB,aAAerB,EAAKqB,aAAaC,KAAlBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IACpBA,EAAKM,kBAAoBN,EAAKM,kBAAkBgB,KAAvBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IAEzBwB,OAAOC,SAAWC,IAAS,WAEvBF,OAAOG,YAAcC,SAASC,gBAAgBC,YAC9CF,SAASC,gBAAgBE,cAGzB/B,EAAKgC,cAEN,KAxBShC,mFA4BZZ,KAAK4C,kDAGM,IAAAC,EAAA7C,KACXA,KAAKuB,SAAS,CACZK,SAAS,IAGX,IAAIkB,EAAS9C,KAAKyB,MAAME,IACpB,uBACA,0BACJoB,MAAK,GAAAC,OACAC,uCADA,YAAAD,OACgDF,EADhD,aAAAE,OAEDC,mCAFC,cAAAD,OAGUhD,KAAKyB,MAAMM,SAHrB,UAAAiB,OAGsChD,KAAKyB,MAAMO,KAHjD,UAAAgB,OAIDhD,KAAKyB,MAAME,IAJV,mCAOFuB,KAAK,SAAAC,GACJ,OAAOA,EAAKC,SAEbF,KAAK,SAAAC,GAMJ,IAAIE,EAAcF,EAAKzB,OAAO4B,MAAMC,IAAI,SAAAD,GACtC,IAAIE,EAAM,eAAAR,OAAkBM,EAAMG,KAAxB,sBAAAT,OACRM,EAAMI,OADE,KAAAV,OAENM,EAAMvD,GAFA,KAAAiD,OAEMM,EAAMK,OAFZ,QAIV,OACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CACEC,IAAKP,EAAMvD,GACXA,GAAIuD,EAAMvD,GACVK,IAAKoD,EACLlD,MAAOgD,EAAMhD,UAKnBe,QAAQC,IAAI6B,EAAKzB,OAAO4B,MAAMQ,QAE9BjB,EAAKtB,SAAS,CACZG,OAAQ,IAAAsB,OAAAnC,OAAAkD,EAAA,EAAAlD,CAAKgC,EAAKpB,MAAMC,QAAhBb,OAAAkD,EAAA,EAAAlD,CAA2BwC,KACnCrB,KAAMa,EAAKpB,MAAMO,KAAO,EACxBJ,SAAS,2CAKJT,GAAG,IAAA6C,EAAAhE,KACV8C,EAAS3B,EAAE8C,OAAOC,MAClB,uBACA,0BAEc,KAAd/C,EAAEgD,SACJpB,MAAK,GAAAC,OACAC,uCADA,YAAAD,OACgDF,EADhD,aAAAE,OAEDC,mCAFC,0CAAAD,OAID7B,EAAE8C,OAAOC,MAJR,mCAOFhB,KAAK,SAAAC,GACJ,OAAOA,EAAKC,SAEbF,KAAK,SAAAC,GAMJ,IAAIE,EAAcF,EAAKzB,OAAO4B,MAAMC,IAAI,SAAAD,GACtC,IAAIE,EAAM,eAAAR,OAAkBM,EAAMG,KAAxB,sBAAAT,OACRM,EAAMI,OADE,KAAAV,OAENM,EAAMvD,GAFA,KAAAiD,OAEMM,EAAMK,OAFZ,QAIV,OACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CACEC,IAAKP,EAAMvD,GACXA,GAAIuD,EAAMvD,GACVK,IAAKoD,EACLlD,MAAOgD,EAAMhD,UAKnB0D,EAAKzC,SAAS,CACZG,OAAQ2B,uCAgBT,IAAAe,EAAApE,KACSA,KAAKyB,MAAMD,UAC3B,OACE5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAChBN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YACX,IADH,UAESN,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,wDAAuD,KACnD,IACNF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,SACEuE,KAAK,OACLC,aAActE,KAAKyB,MAAME,IACzBzB,UAAU,YACVqE,YAAY,6BACZC,UAAW,SAAArD,GAAC,OAAIiD,EAAKnC,aAAad,MACjC,KACE,IACPvB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,aAAauE,QAASzE,KAAKkB,mBAAxC,SACS,KACJ,KACA,KACC,IACVtB,EAAAC,EAAAC,cAAC4E,EAAD,CAAWhE,KAAMV,KAAKyB,MAAMD,YAAc,IAC1C5B,EAAAC,EAAAC,cAAA,QAAMI,UAAU,kBACb,IACAF,KAAKyB,MAAMC,OAAOoC,OAAS,GAAK9D,KAAKyB,MAAMC,OAAQ,KAC9C,KACgB,IAAvB1B,KAAKyB,MAAMG,SACVhC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,aAED,IACHF,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAChBN,EAAAC,EAAAC,cAAA,0BAAqB,KACb,YA7KAS,IAAMC,WCIJmE,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASzC,SAAS0C,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnC,KAAK,SAAAoC,GACjCA,EAAaC","file":"static/js/main.51af0940.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Photo.css\";\n\nclass Photo extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  render() {\n    return (\n      <article id={this.props.id} className=\"photo-item\">\n        <img src={this.props.url} alt={this.props.title} />\n      </article>\n    );\n  }\n}\n\nexport default Photo;\n","import React from \"react\";\n\nclass FilterBar extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    } else {\n      return <div>Filter bar</div>;\n    }\n  }\n}\n\nexport default FilterBar;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Photo from \"./components/Photo\";\nimport FilterBar from \"./components/FilterBar\";\n\nimport debounce from \"lodash.debounce\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      tag: \"sibuyan island\",\n      filterbar: false,\n      loading: true,\n      error: false,\n      hasMore: true,\n      per_page: 6,\n      page: 1\n    };\n\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleFilterClick = this.handleFilterClick.bind(this);\n\n    window.onscroll = debounce(() => {\n      if (\n        window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight\n      ) {\n        // Do awesome stuff like loading more content!\n        this.loadPhotos();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.loadPhotos();\n  }\n\n  loadPhotos() {\n    this.setState({\n      loading: true\n    });\n\n    let method = this.state.tag\n      ? \"flickr.photos.search\"\n      : \"flickr.photos.getRecent\";\n    fetch(\n      `${process.env.REACT_APP_FLICKR_API_BASE}?method=${method}&api_key=${\n        process.env.REACT_APP_FLICKR_API_KEY\n      }&per_page=${this.state.per_page}&page=${this.state.page}&text=${\n        this.state.tag\n      }&format=json&nojsoncallback=1&`\n    )\n      .then(data => {\n        return data.json();\n      })\n      .then(data => {\n        // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}.jpg\n        // or\n        // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}_[mstzb].jpg\n        // or\n        // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{o-secret}_o.(jpg|gif|png)\n        let photosArray = data.photos.photo.map(photo => {\n          let imgurl = `https://farm${photo.farm}.staticflickr.com/${\n            photo.server\n          }/${photo.id}_${photo.secret}.jpg`;\n\n          return (\n            <Photo\n              key={photo.id}\n              id={photo.id}\n              url={imgurl}\n              title={photo.title}\n            />\n          );\n        });\n\n        console.log(data.photos.photo.length);\n\n        this.setState({\n          photos: [[...this.state.photos, ...photosArray]],\n          page: this.state.page + 1,\n          loading: false\n        });\n      });\n  }\n\n  handleSearch(e) {\n    let method = e.target.value\n      ? \"flickr.photos.search\"\n      : \"flickr.photos.getRecent\";\n\n    if (e.keyCode === 13) {\n      fetch(\n        `${process.env.REACT_APP_FLICKR_API_BASE}?method=${method}&api_key=${\n          process.env.REACT_APP_FLICKR_API_KEY\n        }&safe_search=1&per_page=6&page=1&text=${\n          e.target.value\n        }&format=json&nojsoncallback=1&`\n      )\n        .then(data => {\n          return data.json();\n        })\n        .then(data => {\n          // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}.jpg\n          // or\n          // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{secret}_[mstzb].jpg\n          // or\n          // https://farm{farm-id}.staticflickr.com/{server-id}/{id}_{o-secret}_o.(jpg|gif|png)\n          let photosArray = data.photos.photo.map(photo => {\n            let imgurl = `https://farm${photo.farm}.staticflickr.com/${\n              photo.server\n            }/${photo.id}_${photo.secret}.jpg`;\n\n            return (\n              <Photo\n                key={photo.id}\n                id={photo.id}\n                url={imgurl}\n                title={photo.title}\n              />\n            );\n          });\n\n          this.setState({\n            photos: photosArray\n          });\n        });\n    }\n  }\n\n  handleFilterClick = e => {\n    e.preventDefault();\n\n    console.log(\"filter click\");\n\n    this.setState({\n      filterbar: !this.state.filterbar\n    });\n  };\n\n  render() {\n    let filterbar = this.state.filterbar;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h2 className=\"logoText\">\n            {\" \"}\n            Flulse <br />\n            <small> Flickr API + React example by mcometa </small>{\" \"}\n          </h2>{\" \"}\n          <div className=\"toolbar-search\">\n            <input\n              type=\"text\"\n              defaultValue={this.state.tag}\n              className=\"searchbox\"\n              placeholder=\"Search then press enter...\"\n              onKeyDown={e => this.handleSearch(e)}\n            />{\" \"}\n          </div>{\" \"}\n          <div className=\"toolbar-filter\">\n            <a className=\"filter-btn\" onClick={this.handleFilterClick}>\n              Filter{\" \"}\n            </a>{\" \"}\n          </div>{\" \"}\n        </header>{\" \"}\n        <FilterBar show={this.state.filterbar} />{\" \"}\n        <main className=\"Main-container\">\n          {\" \"}\n          {this.state.photos.length > 0 && this.state.photos}{\" \"}\n        </main>{\" \"}\n        {this.state.loading === true && (\n          <div className=\"lds-ripple\">\n            <div />\n            <div />\n          </div>\n        )}{\" \"}\n        <footer className=\"App-footer\">\n          <p> hello 2019! </p>{\" \"}\n        </footer>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}