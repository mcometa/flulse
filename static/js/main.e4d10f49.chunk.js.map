{"version":3,"sources":["api/index.js","config.js","components/Search.jsx","components/Header.jsx","components/Footer.jsx","components/Ripple.jsx","components/Photo.jsx","components/Photos.jsx","components/FilterBar.jsx","App.jsx","index.js"],"names":["axios","create","baseURL","headers","Authorization","Search","useState","tag","setTag","className","type","defaultValue","placeholder","onChange","e","currentTarget","value","data-testid","Header","Footer","Loading","Photo","id","url","title","src","alt","Photos","photos","map","photo","thumb","urls","altDescriotion","alt_description","key","FilterBar","show","App","loading","filterbar","filter","page","limit","orientation","data","setData","setLoading","fetchPhotos","a","API","get","responseData","useEffect","Ripple","ReactDOM","render","document","getElementById"],"mappings":"+SAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QCLsB,4BDMtBC,QAAS,CACPC,cAAc,aAAD,OCNQ,kDCkBVC,EAjBA,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACZC,EADY,KACPC,EADO,KAGnB,OACE,yBAAKC,UAAU,kBACb,2BACEC,KAAK,OACLC,aAAcJ,EACdE,UAAU,YACVG,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAON,EAAOM,EAAEC,cAAcC,QACxCC,cAAY,mBCELC,EAXA,kBACb,4BAAQT,UAAU,cAChB,wBAAIA,UAAU,YAAd,SAEE,6BACA,yEAEF,kBAAC,EAAD,QCHWU,EANA,kBACb,4BAAQV,UAAU,cAChB,8CCKWW,EAPC,kBACd,yBAAKX,UAAU,cACb,8BACA,gCCWWY,G,MAZD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,MAAZ,OACZ,6BAASP,cAAY,QAAQK,GAAIA,EAAIb,UAAU,cAC7C,yBAAKgB,IAAKF,EAAKG,IAAKF,OCmBTG,EApBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,0BAAMX,cAAY,SAASR,UAAU,kBAClC,IACAmB,EAAOC,KAAI,SAACC,GAAW,IAEZC,EAGND,EAHFE,KAAQD,MACRT,EAEEQ,EAFFR,GACiBW,EACfH,EADFI,gBAEF,OAAO,kBAAC,EAAD,CAAOC,IAAKb,EAAIA,GAAIA,EAAIC,IAAKQ,EAAOP,MAAOS,SCA3CG,EAZG,SAAC,GACjB,OAD8B,EAAXC,KAEV,2CAGF,MCoMMC,EAlMH,WAAO,IAAD,EACQhC,mBAAS,CAC/BsB,OAAQ,GACRW,SAAS,EACTC,WAAW,EACXC,OAAQ,CACNC,KAAM,EACNC,MAAO,EACPC,YAAa,MARD,mBACTC,EADS,KACHC,EADG,OAYcxC,oBAAS,GAZvB,mBAYTiC,EAZS,KAYAQ,EAZA,KAcVC,EAAW,uCAAG,8BAAAC,EAAA,sEACmBC,EAAIC,IAAJ,UADnB,gBACJC,EADI,EACVP,KAERC,EAAQ,eACHD,EADE,CAELjB,OAAQwB,KALQ,2CAAH,qDAcjB,OALAC,qBAAU,WACRL,IACAD,GAAW,KACV,IAGD,yBAAK9B,cAAY,WAAWR,UAAU,OACpC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW4B,KAAMQ,EAAKL,YACtB,kBAAC,EAAD,CAAQZ,OAAQiB,EAAKjB,UACR,IAAZW,GAAoB,kBAACe,EAAD,MACrB,kBAAC,EAAD,QCrCNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e4d10f49.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport { API_BASE, CLIENT_ID } from '../config';\n\nexport default axios.create({\n  baseURL: API_BASE,\n  headers: {\n    Authorization: `Client-ID ${CLIENT_ID}`,\n  },\n});\n","export const API_BASE = 'https://api.unsplash.com/';\nexport const CLIENT_ID = 'qOW9M-8XVQPqyKf7XyskCOAdhEFgob29jRzPVxHoGBE';\n\nexport default {};\n","import React, { useState } from 'react';\n\nconst Search = () => {\n  const [tag, setTag] = useState('');\n\n  return (\n    <div className=\"toolbar-search\">\n      <input\n        type=\"text\"\n        defaultValue={tag}\n        className=\"searchbox\"\n        placeholder=\"Search then press enter...\"\n        onChange={(e) => setTag(e.currentTarget.value)}\n        data-testid=\"search-input\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\n\nimport Search from './Search';\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <h2 className=\"logoText\">\n      Flulse\n      <br />\n      <small> Unsplash + React example by mcometa </small>\n    </h2>\n    <Search />\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"App-footer\">\n    <p> hello 2019! </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst Loading = () => (\n  <div className=\"lds-ripple\">\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Photo.css';\n\nconst Photo = ({ id, url, title }) => (\n  <article data-testid=\"photo\" id={id} className=\"photo-item\">\n    <img src={url} alt={title} />\n  </article>\n);\n\nPhoto.propTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Photo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Photo from './Photo';\n\nconst Photos = ({ photos }) => {\n  return (\n    <main data-testid=\"photos\" className=\"Main-container\">\n      {' '}\n      {photos.map((photo) => {\n        const {\n          urls: { thumb },\n          id,\n          alt_description: altDescriotion,\n        } = photo;\n        return <Photo key={id} id={id} url={thumb} title={altDescriotion} />;\n      })}\n    </main>\n  );\n};\n\nPhotos.propTypes = {\n  photos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default Photos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterBar = ({ show }) => {\n  if (show) {\n    return <div>Filter bar</div>;\n  }\n\n  return null;\n};\n\nFilterBar.propTypes = {\n  show: PropTypes.bool.isRequired,\n};\n\nexport default FilterBar;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport API from './api';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Ripple from './components/Ripple';\nimport Photos from './components/Photos';\nimport FilterBar from './components/FilterBar';\n\nconst App = () => {\n  const [data, setData] = useState({\n    photos: [],\n    loading: true,\n    filterbar: false,\n    filter: {\n      page: 0,\n      limit: 9,\n      orientation: '',\n    },\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const fetchPhotos = async () => {\n    const { data: responseData } = await API.get(`photos`);\n\n    setData({\n      ...data,\n      photos: responseData,\n    });\n  };\n\n  useEffect(() => {\n    fetchPhotos();\n    setLoading(false);\n  }, []);\n\n  return (\n    <div data-testid=\"app-main\" className=\"App\">\n      <Header />\n      <FilterBar show={data.filterbar} />\n      <Photos photos={data.photos} />\n      {loading === true && <Ripple />}\n      <Footer />\n    </div>\n  );\n};\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       photos: [],\n//       filterbar: false,\n//       loading: true,\n//       error: false,\n//       hasMore: true,\n//       per_page: 6,\n//       page: 1,\n//       loadMore: 0,\n//     };\n\n//     this.handleSearch = this.handleSearch.bind(this);\n//     this.handleFilterClick = this.handleFilterClick.bind(this);\n\n//     window.onscroll = debounce(() => {\n//       if (\n//         window.innerHeight + document.documentElement.scrollTop ===\n//         document.documentElement.offsetHeight\n//       ) {\n//         // Do awesome stuff like loading more content!\n//         this.loadPhotos();\n//       }\n//     }, 200);\n//   }\n\n//   componentDidMount() {\n//     this.loadPhotos();\n//   }\n\n//   handleFilterClick = (e) => {\n//     e.preventDefault();\n//     const { filterbar } = this.state;\n\n//     this.setState({\n//       filterbar: !filterbar,\n//     });\n//   };\n\n//   handleSearch(e) {\n//     const method = () => {\n//       if (e.target.value) {\n//         this.setState({\n//           tag: '',\n//         });\n\n//         return 'flickr.photos.search';\n//       }\n\n//       this.setState({\n//         tag: '',\n//       });\n\n//       return 'flickr.photos.getRecent';\n//     };\n\n//     if (e.keyCode === 13) {\n//       fetch(\n//         `${process.env.REACT_APP_FLICKR_API_BASE}?method=${method()}&api_key=${\n//           process.env.REACT_APP_FLICKR_API_KEY\n//         }&safe_search=1&per_page=6&page=1&text=${e.target.value}&format=json&nojsoncallback=1&`\n//       )\n//         .then((data) => {\n//           return data.json();\n//         })\n//         .then((data) => {\n//           const photosArray = data.photos.photo.map((photo) => {\n//             const imgurl = `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`;\n\n//             return <Photo key={photo.id} id={photo.id} url={imgurl} title={photo.title} />;\n//           });\n\n//           this.setState({\n//             photos: photosArray,\n//           });\n//         });\n//     }\n//   }\n\n//   loadPhotos() {\n//     this.setState({\n//       loading: true,\n//     });\n\n//     const { tag, photos, per_page, page } = this.state;\n\n//     const method = tag ? 'flickr.photos.search' : 'flickr.photos.getRecent';\n\n//     fetch(\n// eslint-disable-next-line max-len\n//       `${process.env.REACT_APP_FLICKR_API_BASE}?method=${method}&api_key=${process.env.REACT_APP_FLICKR_API_KEY}&per_page=${per_page}&page=${page}&text=${tag}&format=json&nojsoncallback=1&`\n//     )\n//       .then((data) => {\n//         return data.json();\n//       })\n//       .then((data) => {\n//         this.setState({\n//           photos: [...photos, ...data.photos.photo],\n//           page: page + 1,\n//           loading: false,\n//           loadMore: 1,\n//         });\n//       });\n//   }\n\n//   render() {\n//     const { filterbar, photos, loading } = this.state;\n//     const [tag, setTag] = useState('something else');\n\n//     return (\n//       <div data-testid=\"app-main\" className=\"App\">\n//         <header className=\"App-header\">\n//           <h2 className=\"logoText\">\n//             {' '}\n//             Flulse\n//             <br />\n//             <small> Flickr API + React example by mcometa </small>{' '}\n//           </h2>{' '}\n//           <div className=\"toolbar-search\">\n//             <input\n//               type=\"text\"\n//               defaultValue={tag}\n//               className=\"searchbox\"\n//               placeholder=\"Search then press enter...\"\n//               onKeyDown={(e) => setTag(e.currentTarget.value)}\n//               data-testid=\"search-input\"\n//             />{' '}\n//           </div>{' '}\n//         </header>{' '}\n//         <FilterBar show={filterbar} />{' '}\n//         <main data-testid=\"main-container\" className=\"Main-container\">\n//           {' '}\n//           {photos.map((photo) => {\n//             const imgurl = `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`;\n\n//             return <Photo key={photo.id} id={photo.id} url={imgurl} title={photo.title} />;\n//           })}\n//         </main>{' '}\n//         {loading === true && (\n//           <div className=\"lds-ripple\">\n//             <div />\n//             <div />\n//           </div>\n//         )}{' '}\n//         <footer className=\"App-footer\">\n//           <p> hello 2019! </p>{' '}\n//         </footer>{' '}\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}